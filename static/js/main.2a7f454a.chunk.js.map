{"version":3,"sources":["components/charts/linechart/index.js","components/charts/barchart/index.js","components/Neomorphism.js","components/charts/map/choropleth.js","components/stats/index.js","components/help/index.js","components/dashboard/index.js","App.js","serviceWorker.js","index.js"],"names":["RenderLineChart","props","state","data","timeseries","total","startIndex","endIndex","this","setState","parseInt","length","style","width","height","margin","top","right","bottom","left","stroke","tick","fontSize","dataKey","domain","contentStyle","formatter","value","name","payload","date","wrapperStyle","barSize","fill","type","PureComponent","CustomizedAxisTick","x","y","transform","dy","textAnchor","BarChartGraph","states","filter","d","active","confirmed","deaths","recovered","slice","interval","layout","verticalAlign","align","stackId","CountAnim","start","end","delay","countUpRef","ref","Neomarphismui","title","className","color","size","noAnime","isNaN","inc","ChoroplethMap","useState","setStates","statistic","setStatistic","setIndex","choroplethMap","useRef","useEffect","current","mapData","maxConfirmed","minConfirmed","i","selector","svg","d3","attr","unemployment","projection","center","scale","translate","path","append","delta","Math","floor","cells","Array","from","keys","map","legendLinear","legendColor","shapeWidth","titleWidth","labels","genLength","generatedLabels","labelDelimiter","n","n1","n2","orient","select","call","promises","JSON","parse","stringify","indiaMapJson","Promise","all","then","india","index","set","toLowerCase","selectAll","topojson","objects","features","enter","get","properties","ST_NM","on","target","parentNode","appendChild","text","parseFloat","toFixed","toTitleCase","str","split","charAt","toUpperCase","join","Fragment","Col","xs","window","innerWidth","md","lg","sm","Row","id","viewBox","preserveAspectRatio","Stats","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","parseData","deltas","confirmeddelta","recovereddelta","deceaseddelta","toString","TableRow","console","log","key","loc","number","HelpContacts","contacts","primary","Table","responsive","striped","bordered","hover","colSpan","href","email","twitter","facebook","regional","DashBoard","setTotal","fetched","setFetched","setContacts","setLastUpdated","setTimeseries","setDeltas","getStates","getHelpDetails","axios","response","catch","err","statewise","cases_time_series","lastupdatedtime","key_values","Container","App","fluid","class","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2a7f454a.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport {\r\n  Brush,\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Bar,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nexport default class RenderLineChart extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: props.timeseries,\r\n      total: props.total,\r\n      startIndex: 0,\r\n      endIndex: 10\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let data = this.state.data;\r\n    this.setState({\r\n      startIndex: parseInt(data.length - 10),\r\n      endIndex: parseInt(data.length - 1)\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", height: 400 }}>\r\n        <ResponsiveContainer>\r\n          <ComposedChart\r\n            width={500}\r\n            height={400}\r\n            data={this.state.data}\r\n            margin={{\r\n              top: 20,\r\n              right: 20,\r\n              bottom: 20,\r\n              left: -10\r\n            }}\r\n          >\r\n            <CartesianGrid stroke=\"#f5f5f5\" />\r\n            <XAxis tick={{ fontSize: \"14px\" }} dataKey=\"date\" />\r\n            <YAxis\r\n              tick={{ fontSize: \"14px\" }}\r\n              domain={[\"auto\", parseInt(this.state.total)]}\r\n            />\r\n            <Tooltip\r\n              contentStyle={{ fontSize: \"14px\" }}\r\n              formatter={(value, name, props) =>\r\n                value + \", date: \" + props.payload.date\r\n              }\r\n            />\r\n            <Legend wrapperStyle={{ fontSize: \"14px\" }} />\r\n            <Bar dataKey=\"dailyconfirmed\" barSize={20} fill=\"#82ca9d\" />\r\n            <Line type=\"monotone\" dataKey=\"totalconfirmed\" stroke=\"#ff7300\" />\r\n            <Brush\r\n              dataKey=\"date\"\r\n              height={30}\r\n              stroke=\"#000000\"\r\n              startIndex={this.state.startIndex}\r\n              endIndex={this.state.endIndex}\r\n            >\r\n              <ComposedChart>\r\n                <Bar dataKey=\"dailyconfirmed\" barSize={20} fill=\"#82ca9d\" />\r\n              </ComposedChart>\r\n            </Brush>\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  BarChart,\r\n  ResponsiveContainer,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nclass CustomizedLabel extends PureComponent {\r\n  render() {\r\n    const { x, y, stroke, value } = this.props;\r\n\r\n    return (\r\n      <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"middle\">\r\n        {value}\r\n      </text>\r\n    );\r\n  }\r\n}\r\n\r\nclass CustomizedAxisTick extends PureComponent {\r\n  render() {\r\n    const { x, y, stroke, payload } = this.props;\r\n\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text\r\n          x={0}\r\n          y={0}\r\n          dy={3}\r\n          textAnchor=\"end\"\r\n          fill=\"#666\"\r\n          transform=\"rotate(-90)\"\r\n          fontSize=\"12px\"\r\n        >\r\n          {payload.value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\nexport default class BarChartGraph extends PureComponent {\r\n  state = {\r\n    data: this.props.states\r\n  };\r\n  componentDidMount() {\r\n    let data = this.state.data;\r\n    data = data.filter(\r\n      d =>\r\n        !(\r\n          d.active == 0 &&\r\n          d.confirmed == 0 &&\r\n          d.deaths == 0 &&\r\n          d.recovered == 0\r\n        )\r\n    );\r\n\r\n    this.setState({ data: data.slice(1) });\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", height: 400 }}>\r\n        <ResponsiveContainer>\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={this.state.data}\r\n            margin={{\r\n              top: 20,\r\n              right: 30,\r\n              left: -10,\r\n              bottom: 80\r\n            }}\r\n          >\r\n            {/* <CartesianGrid strokeDasharray=\"1 1\" /> */}\r\n            <XAxis interval={0} dataKey=\"state\" tick={<CustomizedAxisTick />} />\r\n            <YAxis tick={\"\"} />\r\n            <Tooltip\r\n              contentStyle={{ fontSize: \"14px\" }}\r\n              formatter={(value, name, props) =>\r\n                value + \", state: \" + props.payload.state\r\n              }\r\n            />\r\n            <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n            <Bar dataKey=\"confirmed\" stackId=\"a\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"active\" stackId=\"a\" fill=\"#82ca9d\" />\r\n            <Bar dataKey=\"deaths\" stackId=\"a\" fill=\"red\" />\r\n            <Bar dataKey=\"recovered\" stackId=\"a\" fill=\"green\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./neomarphismstyle.css\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst CountAnim = props => {\r\n  return (\r\n    <CountUp start={0} end={props.data} delay={0}>\r\n      {({ countUpRef }) => <strong ref={countUpRef}></strong>}\r\n    </CountUp>\r\n  );\r\n};\r\n\r\nexport const Neomarphismui = props => {\r\n  return (\r\n    <section>\r\n      <h5>{props.title}</h5>\r\n      <div className={props.color}>\r\n        <span className={props.size ? props.size : \"\"}>\r\n          {props.noAnime ? (\r\n            <strong>{props.data}</strong>\r\n          ) : (\r\n            <CountAnim data={props.data} />\r\n          )}\r\n        </span>\r\n        {props.noAnime ? (\r\n          <span></span>\r\n        ) : (\r\n          <span>{isNaN(props.inc) ? 0 : props.inc}</span>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { legendColor } from \"d3-svg-legend\";\r\nimport * as topojson from \"topojson\";\r\nimport { Neomarphismui } from \"../../Neomorphism\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport indiaMapJson from \"./india.json\";\r\n\r\nfunction ChoroplethMap(props) {\r\n  const [rendered, setRendered] = useState(false);\r\n  const [states, setStates] = useState(props.states);\r\n  const [state, setState] = useState({});\r\n  const [statistic, setStatistic] = useState({});\r\n  const [index, setIndex] = useState(1);\r\n  const choroplethMap = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.states.length > 1 && choroplethMap.current) {\r\n      mapData(choroplethMap.current);\r\n      setState(states[1]);\r\n    }\r\n  }, [statistic]);\r\n\r\n  useEffect(() => {\r\n    if (states.length > 1) {\r\n      let total = 0;\r\n      let maxConfirmed = parseInt(states[1].confirmed);\r\n      let minConfirmed = parseInt(states[1].confirmed);\r\n      for (let i = 1; i < states.length; i++) {\r\n        total += parseInt(states[i].confirmed);\r\n        if (parseInt(states[i].confirmed) > parseInt(maxConfirmed))\r\n          maxConfirmed = parseInt(states[i].confirmed);\r\n        if (parseInt(states[i].confirmed) < parseInt(minConfirmed))\r\n          minConfirmed = parseInt(states[i].confirmed);\r\n      }\r\n      setStatistic({\r\n        total: total,\r\n        maxConfirmed: maxConfirmed,\r\n        minConfirmed: minConfirmed\r\n      });\r\n    }\r\n  }, [states.length]);\r\n\r\n  useEffect(() => {\r\n    setStates(props.states);\r\n  }, [props.states]);\r\n\r\n  const handleMouseover = name => {\r\n    states.map((state, index) => {\r\n      if (state.state.toLowerCase() === name.toLowerCase()) {\r\n        setState(state);\r\n        setIndex(index);\r\n      }\r\n    });\r\n  };\r\n\r\n  const mapData = selector => {\r\n    const svg = d3.select(selector);\r\n    const width = +svg.attr(\"width\");\r\n    const height = +svg.attr(\"height\");\r\n\r\n    const unemployment = d3.map();\r\n\r\n    const projection = d3\r\n      .geoMercator()\r\n      .center([78.9, 19])\r\n      .scale(1000)\r\n      .translate([width / 2, height / 2]);\r\n\r\n    const path = d3.geoPath(projection);\r\n\r\n    // Colorbar\r\n    const maxInterpolation = 0.8;\r\n\r\n    function label({ i, genLength, generatedLabels, labelDelimiter }) {\r\n      if (i === genLength - 1) {\r\n        const n = Math.floor(generatedLabels[i]);\r\n        return `${n}+`;\r\n      } else {\r\n        const n1 = Math.floor(generatedLabels[i]);\r\n        const n2 = Math.floor(generatedLabels[i + 1]);\r\n        return `${n1} - ${n2}`;\r\n      }\r\n    }\r\n\r\n    const color = d3\r\n      .scaleSequential(d3.interpolateReds)\r\n      .domain([0, statistic.maxConfirmed / maxInterpolation]);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"legendLinear\")\r\n      .attr(\"transform\", \"translate(373, 278)\");\r\n\r\n    const numCells = 6;\r\n    const delta = Math.floor(statistic.maxConfirmed / (numCells - 1));\r\n    const cells = Array.from(Array(numCells).keys()).map(i => i * delta);\r\n\r\n    const legendLinear = legendColor()\r\n      .shapeWidth(50)\r\n      .cells(cells)\r\n      .titleWidth(3)\r\n      .labels(label)\r\n      .title(\"Confirmed Cases\")\r\n      .orient(\"vertical\")\r\n      .scale(color);\r\n\r\n    svg.select(\".legendLinear\").call(legendLinear);\r\n\r\n    const promises = [JSON.parse(JSON.stringify(indiaMapJson))];\r\n\r\n    Promise.all(promises).then(ready);\r\n\r\n    function ready([india]) {\r\n      states.map((state, index) => {\r\n        unemployment.set(state.state.toLowerCase(), state.confirmed);\r\n      });\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"states\")\r\n        .selectAll(\"path\")\r\n        .data(topojson.feature(india, india.objects.india).features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"fill\", function(d) {\r\n          const n = unemployment.get(d.properties.ST_NM.toLowerCase());\r\n          return d3.interpolateReds(\r\n            (d.confirmed =\r\n              (n > 0) * 0.05 + (n / statistic.maxConfirmed) * maxInterpolation)\r\n          );\r\n        })\r\n        .attr(\"d\", path)\r\n        .attr(\"pointer-events\", \"all\")\r\n        .on(\"mouseenter\", d => {\r\n          handleMouseover(d.properties.ST_NM);\r\n          const target = d3.event.target;\r\n          d3.select(target.parentNode.appendChild(target))\r\n            .attr(\"stroke\", \"#ff073a\")\r\n            .attr(\"stroke-width\", 2);\r\n        })\r\n        .on(\"mouseleave\", d => {\r\n          const n = unemployment.get(d.properties.ST_NM.toLowerCase());\r\n          const target = d3.event.target;\r\n          d3.select(target)\r\n            .attr(\r\n              \"fill\",\r\n              d3.interpolateReds(\r\n                (d.confirmed =\r\n                  (n > 0) * 0.05 +\r\n                  (n / statistic.maxConfirmed) * maxInterpolation)\r\n              )\r\n            )\r\n            .attr(\"stroke\", \"None\");\r\n        })\r\n        .style(\"cursor\", \"pointer\")\r\n        .append(\"title\")\r\n        .text(function(d) {\r\n          return (\r\n            parseFloat(\r\n              100 *\r\n                (unemployment.get(d.properties.ST_NM.toLowerCase()) /\r\n                  statistic.total)\r\n            ).toFixed(2) +\r\n            \"% from \" +\r\n            toTitleCase(d.properties.ST_NM)\r\n          );\r\n        });\r\n\r\n      svg\r\n        .append(\"path\")\r\n        .attr(\"stroke\", \"#ff073a20\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"d\", path(topojson.mesh(india, india.objects.india)));\r\n    }\r\n  };\r\n\r\n  const toTitleCase = str => {\r\n    str = str.toLowerCase().split(\" \");\r\n    for (let i = 0; i < str.length; i++) {\r\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\r\n    }\r\n    return str.join(\" \");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Col xs={12} className=\"text-center\">\r\n        <h4 className=\"header\">Statistics by State</h4>\r\n      </Col>\r\n      <Col xs={12} className=\"text-center\">\r\n        <h6 className=\"header\">\r\n          {window.innerWidth <= 769 ? \"Tap\" : \"Hover\"} over a state for more\r\n          details\r\n        </h6>\r\n      </Col>\r\n      <Col xs={12} md={6} lg={6} sm={12}>\r\n        <Row>\r\n          <Col>\r\n            <Neomarphismui\r\n              title=\"State\"\r\n              color=\"neumorphic variation2 blue\"\r\n              data={state.state}\r\n              size=\"small\"\r\n              noAnime\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Neomarphismui\r\n              title=\"Confirmed\"\r\n              color=\"neumorphic variation2 brown\"\r\n              data={state.confirmed}\r\n              noAnime\r\n            />\r\n          </Col>\r\n\r\n          <Col>\r\n            <Neomarphismui\r\n              title=\"Active\"\r\n              color=\"neumorphic variation2 orange\"\r\n              data={state.active}\r\n              noAnime\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Neomarphismui\r\n              title=\"Recovered\"\r\n              color=\"neumorphic variation2 green\"\r\n              data={state.recovered}\r\n              noAnime\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Neomarphismui\r\n              title=\"Deceased\"\r\n              color=\"neumorphic variation2 red\"\r\n              data={state.deaths}\r\n              noAnime\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Col xs={12} md={6} lg={6} sm={12}>\r\n        <svg\r\n          id=\"chart\"\r\n          width={`556`}\r\n          height={`400`}\r\n          viewBox={`450 -200 275 739`}\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n          ref={choroplethMap}\r\n        ></svg>\r\n      </Col>\r\n    </React.Fragment>\r\n    // <div\r\n    //   className=\"ChoroplethMap fadeInUp\"\r\n    //   style={{\r\n    //     animationDelay: \"1.2s\",\r\n    //     position: \"relative\"\r\n    //   }}\r\n    // >\r\n    //   <h1 className=\"header\">Statistics by State</h1>\r\n    //   <h6 className=\"header\">\r\n    //     {window.innerWidth <= 769 ? \"Tap\" : \"Hover\"} over a state for more\r\n    //     details\r\n    //   </h6>\r\n    //   <div className=\"svg-parent\" style={{ textAlign: \"end\" }}>\r\n    //     <svg\r\n    //       id=\"chart\"\r\n    //       width=\"650\"\r\n    //       height={window.innerWidth <= 479 ? 650 : 750}\r\n    //       viewBox={`0 0 650 ${window.innerWidth <= 479 ? 650 : 750}`}\r\n    //       preserveAspectRatio=\"xMidYMid meet\"\r\n    //       ref={choroplethMap}\r\n    //     ></svg>\r\n    //   </div>\r\n\r\n    //   <div\r\n    //     className=\"map-stats\"\r\n    //     style={{\r\n    //       display: \"grid\",\r\n    //       gridTemplateColumns: \"repeat(auto-fit, minmax(165px, 1fr))\",\r\n    //       width: \"40%\",\r\n    //       position: \"absolute\",\r\n    //       top: \"8rem\",\r\n    //       left: \"1px\"\r\n    //     }}\r\n    //   >\r\n    //     <Neomarphismui\r\n    //       title=\"State\"\r\n    //       color=\"neumorphic variation2 blue\"\r\n    //       data={state.state}\r\n    //       size=\"small\"\r\n    //     />\r\n\r\n    //     <Neomarphismui\r\n    //       title=\"Confirmed\"\r\n    //       color=\"neumorphic variation2 brown\"\r\n    //       data={state.confirmed}\r\n    //     />\r\n    //     <Neomarphismui\r\n    //       title=\"Active\"\r\n    //       color=\"neumorphic variation2 orange\"\r\n    //       data={state.active}\r\n    //     />\r\n    //     <Neomarphismui\r\n    //       title=\"Recovered\"\r\n    //       color=\"neumorphic variation2 green\"\r\n    //       data={state.recovered}\r\n    //     />\r\n    //     <Neomarphismui\r\n    //       title=\"Deceased\"\r\n    //       color=\"neumorphic variation2 red\"\r\n    //       data={state.deaths}\r\n    //     />\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default ChoroplethMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Neomarphismui } from \"../Neomorphism\";\r\n\r\nconst Stats = props => {\r\n  const [data, setData] = useState(props.data);\r\n  const [confirmed, setConfirmed] = useState(0);\r\n  const [active, setActive] = useState(0);\r\n  const [recoveries, setRecoveries] = useState(0);\r\n  const [deaths, setDeaths] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(props.data);\r\n    parseData();\r\n  });\r\n\r\n  const parseData = () => {\r\n    let confirmed = 0;\r\n    let active = 0;\r\n    let recoveries = 0;\r\n    let deaths = 0;\r\n    data.map((state, index) => {\r\n      if (index !== 0) {\r\n        confirmed += parseInt(state.confirmed);\r\n        active += parseInt(state.active);\r\n        recoveries += parseInt(state.recovered);\r\n        deaths += parseInt(state.deaths);\r\n      }\r\n    });\r\n    setConfirmed(confirmed);\r\n    setActive(active);\r\n    setRecoveries(recoveries);\r\n    setDeaths(deaths);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col xs={6} sm={6} md={3} lg={3}>\r\n        <Neomarphismui\r\n          title=\"Confirmed\"\r\n          color=\"neumorphic variation2 brown\"\r\n          data={confirmed}\r\n          inc={\r\n            props.deltas\r\n              ? props.deltas.confirmeddelta >= 0\r\n                ? \"+\" + props.deltas.confirmeddelta\r\n                : props.deltas.confirmeddelta\r\n              : \"\"\r\n          }\r\n        />\r\n      </Col>\r\n      <Col xs={6} sm={6} md={3} lg={3}>\r\n        <Neomarphismui\r\n          title=\"Active\"\r\n          color=\"neumorphic variation2 orange\"\r\n          data={active}\r\n          inc={\r\n            props.deltas\r\n              ? props.deltas.confirmeddelta -\r\n                  props.deltas.recovereddelta -\r\n                  props.deltas.deceaseddelta >=\r\n                0\r\n                ? \"+\" +\r\n                  (\r\n                    props.deltas.confirmeddelta -\r\n                    props.deltas.recovereddelta -\r\n                    props.deltas.deceaseddelta\r\n                  ).toString()\r\n                : props.deltas.confirmeddelta -\r\n                  props.deltas.recovereddelta -\r\n                  props.deltas.deceaseddelta\r\n              : \"\"\r\n          }\r\n        />\r\n      </Col>\r\n      <Col xs={6} sm={6} md={3} lg={3}>\r\n        <Neomarphismui\r\n          title=\"Recovered\"\r\n          color=\"neumorphic variation2 green\"\r\n          data={recoveries}\r\n          inc={\r\n            props.deltas\r\n              ? props.deltas.recovereddelta >= 0\r\n                ? \"+\" + props.deltas.recovereddelta\r\n                : props.deltas.recovereddelta\r\n              : \"\"\r\n          }\r\n        />\r\n      </Col>\r\n      <Col xs={6} sm={6} md={3} lg={3}>\r\n        <Neomarphismui\r\n          title=\"Death\"\r\n          color=\"neumorphic variation2 red\"\r\n          data={deaths}\r\n          inc={\r\n            props.deltas\r\n              ? props.deltas.deceaseddelta >= 0\r\n                ? \"+\" + props.deltas.deceaseddelta\r\n                : props.deltas.deceaseddelta\r\n              : \"\"\r\n          }\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport { Row, Col, Table } from \"react-bootstrap\";\r\n\r\nconst TableRow = props => {\r\n  console.log(\"tablerow \", props.data);\r\n  let helpData = props.data;\r\n  return helpData.map(data => (\r\n    <tr key={data.loc}>\r\n      <td>{data.loc}</td>\r\n      <td>{data.number}</td>\r\n    </tr>\r\n  ));\r\n};\r\n\r\nconst HelpContacts = props => {\r\n  console.log(\"contacts \", props.contacts);\r\n  return props.contacts.primary ? (\r\n    <div className=\"help\">\r\n      <h4 className=\"text-center\">Contact & helpline</h4>\r\n      <Table responsive striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"3\">Primary Contact</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Number</td>\r\n            <td>{props.contacts.primary.number}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Toll Free</td>\r\n            <td>{props.contacts.primary[\"number-tollfree\"]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Email</td>\r\n            <td>\r\n              <a href={`mailto:${props.contacts.primary.email}`}>\r\n                {props.contacts.primary.email}\r\n              </a>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Twitter</td>\r\n            <td>\r\n              <a href={`${props.contacts.primary.twitter}`}>\r\n                {props.contacts.primary.twitter}\r\n              </a>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Facebook</td>\r\n            <td>\r\n              <a href={`${props.contacts.primary.facebook}`}>\r\n                {props.contacts.primary.facebook}\r\n              </a>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      {props.contacts.regional ? (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>State</th>\r\n              <th>Number</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <TableRow data={props.contacts.regional} />\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\nexport default HelpContacts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport style from \"./style.css\";\r\nimport axios from \"axios\";\r\nimport RenderLineChart from \"../charts/linechart\";\r\nimport BarChartGraph from \"../charts/barchart\";\r\nimport ChoroplethMap from \"../charts/map/choropleth\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Stats from \"../stats\";\r\nimport HelpContacts from \"../help\";\r\n\r\nconst DashBoard = props => {\r\n  const [states, setStates] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [contacts, setContacts] = useState([]);\r\n  const [lastUpdated, setLastUpdated] = useState(\"\");\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const [deltas, setDeltas] = useState([]);\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n      getHelpDetails();\r\n    }\r\n  }, [fetched]);\r\n  const getHelpDetails = () => {\r\n    axios\r\n      .get(\"https://api.rootnet.in/covid19-in/contacts\")\r\n      .then(response => {\r\n        console.log(response.data.data.contacts);\r\n        setContacts(response.data.data.contacts);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const getStates = () => {\r\n    axios\r\n      .get(\"https://api.covid19india.org/data.json\")\r\n      .then(response => {\r\n        // console.log(\r\n        //   \"irfan\",\r\n        //   response.data.cases_time_series,\r\n        //   response.data.key_values[0]\r\n        // );\r\n\r\n        setTotal(response.data.statewise[0].confirmed);\r\n\r\n        //console.log(\"response.data.statewise \", response.data.statewise);\r\n        setStates(response.data.statewise);\r\n        // response.data.cases_time_series.length =\r\n        //   response.data.cases_time_series.length - 1;\r\n        setTimeseries(response.data.cases_time_series);\r\n        setLastUpdated(\r\n          response.data.statewise[0].lastupdatedtime.slice(0, 15) +\r\n            response.data.statewise[0].lastupdatedtime.slice(18)\r\n        );\r\n        setDeltas(response.data.key_values[0]);\r\n        setFetched(true);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <Container className=\"dashboard\">\r\n      <Stats data={states} deltas={deltas} />\r\n      <Row>\r\n        <Col xs={12} sm={12} md={6} lg={6}>\r\n          {timeseries.length > 0 ? (\r\n            <div className=\"card\">\r\n              <RenderLineChart timeseries={timeseries} total={total} />\r\n            </div>\r\n          ) : (\r\n            \"Loading...\"\r\n          )}\r\n        </Col>\r\n        <Col xs={12} sm={12} md={6} lg={6}>\r\n          {states.length > 0 ? (\r\n            <div className=\"card\">\r\n              <BarChartGraph states={states} />\r\n            </div>\r\n          ) : (\r\n            \"Loading...\"\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <ChoroplethMap states={states} />\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <HelpContacts contacts={contacts} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport DashBoard from \"./components/dashboard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nfunction App() {\n  return (\n    <Container fluid>\n      <DashBoard />\n      <div class=\"footer\">\n        <p>Developed by Irfan G G</p>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}